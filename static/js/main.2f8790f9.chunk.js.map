{"version":3,"sources":["Components/Navbar.js","Components/Textform.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","a","type","id","href","onClick","togglebtn","htmlFor","Textform","useState","Text","setText","style","color","title","rows","value","onChange","event","target","backgroundColor","upperText","toUpperCase","lowerText","toLowerCase","split","length","App","setmode","document","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"0MAGe,SAASA,EAAOC,GAC7B,OACE,mCACE,qBACEC,UAAS,yCAAoCD,EAAME,KAA1C,eAAqDF,EAAME,MADtE,SAGE,sBAAKD,UAAU,kBAAf,UACE,mBAAGA,UAAU,eAAeE,EAAE,IAA9B,uBAGA,wBACEF,UAAU,iBACVG,KAAK,SACL,iBAAe,WACf,iBAAe,0BACf,gBAAc,yBACd,gBAAc,QACd,aAAW,oBAPb,SASE,sBAAMH,UAAU,0BAElB,sBAAKA,UAAU,2BAA2BI,GAAG,yBAA7C,UACE,oBAAIJ,UAAU,kCAAd,SACE,oBAAIA,UAAU,WAAd,SACE,mBAAGA,UAAU,kBAAkB,eAAa,OAAOK,KAAK,IAAxD,sBAUJ,sBAAKL,UAAS,sCAAgD,UAAfD,EAAME,KAAmB,OAAS,SAAjF,UACE,uBACED,UAAU,mBACVG,KAAK,WACLC,GAAG,yBACHE,QAASP,EAAMQ,YAEjB,uBACEP,UAAU,mBACVQ,QAAQ,yBAFV,oCC1CC,SAASC,EAASV,GAC/B,MAAwBW,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KAiBA,OACE,qCACE,sBAAKZ,UAAU,YAAYa,MAAO,CAACC,MAAqB,UAAff,EAAME,KAAmB,QAAS,SAA3E,UACE,oBAAIY,MAAO,CAACC,MAAqB,UAAff,EAAME,KAAmB,QAAS,SAApD,SAAgEF,EAAMgB,QACtE,qBAAKf,UAAU,OAAf,SACE,0BACEgB,KAAK,IACLhB,UAAU,eACVI,GAAG,QACHa,MAAON,EACPO,SAzBa,SAACC,GACtBP,EAAQO,EAAMC,OAAOH,QAyBbJ,MAAO,CAACQ,gBAA+B,UAAftB,EAAME,KAAmB,QAAS,OAClDa,MAAqB,UAAff,EAAME,KAAmB,QAAS,aAGpD,wBAAQD,UAAU,kBAAkBM,QA3BpB,WACpB,IAAIgB,EAAYX,EAAKY,cACrBX,EAAQU,IAyBJ,6BAGA,wBAAQtB,UAAU,uBAAuBM,QA1BzB,WACpB,IAAIkB,EAAYb,EAAKc,cACrBb,EAAQY,IAwBJ,2BAGA,wBAAQxB,UAAU,uBAAuBM,QAzBtB,WAEvBM,EADgB,KAwBZ,2BAIF,sBAAKZ,UAAU,YAAYa,MAAO,CAACC,MAAqB,UAAff,EAAME,KAAmB,QAAS,SAA3E,UACE,mDACA,8BACGU,EAAKe,MAAM,KAAKC,OADnB,aACqChB,EAAKgB,OAD1C,+BAIA,yCACA,4BAAIhB,UCLGiB,MAlCf,WAEE,MAAwBlB,mBAAS,SAAjC,mBAAOT,EAAP,KAAa4B,EAAb,KAaA,OACC,qCAEA,cAAC/B,EAAD,CAAQG,KAAMA,EAAMM,UAdL,WACJ,UAAPN,GACD4B,EAAQ,QACRC,SAASC,KAAKlB,MAAMQ,gBAAgB,eAGpCQ,EAAQ,SACRC,SAASC,KAAKlB,MAAMQ,gBAAgB,YAQvC,qBAAKrB,UAAU,YAAf,SAMO,cAACS,EAAD,CAAUM,MAAM,uBAAuBd,KAAMA,UC1BxC+B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFb,SAASc,eAAe,SAG1BZ,K","file":"static/js/main.2f8790f9.chunk.js","sourcesContent":["import React from \"react\";\r\n// import {   Link } from \"react-router-dom\";\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <>\r\n      <nav\r\n        className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}\r\n      >\r\n        <div className=\"container-fluid\">\r\n          <a className=\"navbar-brand\" a=\"/\">\r\n            TEXTUTILS\r\n          </a>\r\n          <button\r\n            className=\"navbar-toggler\"\r\n            type=\"button\"\r\n            data-bs-toggle=\"collapse\"\r\n            data-bs-target=\"#navbarSupportedContent\"\r\n            aria-controls=\"navbarSupportedContent\"\r\n            aria-expanded=\"false\"\r\n            aria-label=\"Toggle navigation\"\r\n          >\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n              <li className=\"nav-item\">\r\n                <a className=\"nav-link active\" aria-current=\"page\" href=\"/\">\r\n                  Home\r\n                </a>\r\n              </li>\r\n              {/* <li className=\"nav-item\">\r\n                <a className=\"nav-a\" aria-current=\"page\" href=\"/about\">\r\n                  About\r\n                </a>\r\n              </li> */}\r\n            </ul>\r\n            <div className={`form-check form-switch text-${props.mode === \"light\" ? \"dark\" : \"light\" }`}>\r\n              <input\r\n                className=\"form-check-input\"\r\n                type=\"checkbox\"\r\n                id=\"flexSwitchCheckDefault\"\r\n                onClick={props.togglebtn}\r\n              />\r\n              <label\r\n                className=\"form-check-label\"\r\n                htmlFor=\"flexSwitchCheckDefault\"\r\n              >\r\n                DARK MODE\r\n              </label>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    </>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\n\r\nexport default function Textform(props) {\r\n  const [Text, setText] = useState(\"\");\r\n\r\n  const handleOnChange = (event) => {\r\n    setText(event.target.value);\r\n  };\r\n  const handleUpClick = () => {\r\n    let upperText = Text.toUpperCase();\r\n    setText(upperText);\r\n  };\r\n  const handleLoClick = () => {\r\n    let lowerText = Text.toLowerCase();\r\n    setText(lowerText);\r\n  };\r\n  const handleClearClick = () => {\r\n    let clearText = \"\";\r\n    setText(clearText);\r\n  };\r\n  return (\r\n    <>\r\n      <div className=\"container\" style={{color:props.mode === \"light\" ? \"black\" :\"white\"}}>\r\n        <h1 style={{color:props.mode === \"light\" ? \"black\" :\"white\"} }>{props.title}</h1>\r\n        <div className=\"mb-3\">\r\n          <textarea\r\n            rows=\"8\"\r\n            className=\"form-control\"\r\n            id=\"Input\"\r\n            value={Text}\r\n            onChange={handleOnChange}\r\n            style={{backgroundColor:props.mode === \"light\" ? \"light\" :\"grey\",\r\n                    color:props.mode === \"light\" ? \"black\" :\"white\"}}\r\n          />\r\n        </div>\r\n        <button className=\"btn btn-primary\" onClick={handleUpClick}>\r\n          Convert CAPITAL\r\n        </button>\r\n        <button className=\"btn btn-primary mx-3\" onClick={handleLoClick}>\r\n          Convert LOWER\r\n        </button>\r\n        <button className=\"btn btn-primary mx-3\" onClick={handleClearClick}>\r\n          CLEAR TEXT\r\n        </button>\r\n      </div>\r\n      <div className=\"container\" style={{color:props.mode === \"light\" ? \"black\" :\"white\"}}>\r\n        <h2>Your text summary</h2>\r\n        <p>\r\n          {Text.split(\" \").length} word and {Text.length} characters in your\r\n          text.\r\n        </p>\r\n        <h2>Preview</h2>\r\n        <p>{Text}</p>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React,{useState} from 'react';\nimport './App.css';\n// import About from './Components/About';\nimport Navbar from './Components/Navbar';\nimport Textform from './Components/Textform';\n\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route,\n// } from \"react-router-dom\";\n\n\nfunction App() {\n \n  const [mode, setmode] = useState(\"light\");\n  \n  const togglebtn=()=>{\n    if(mode===\"light\"){\n      setmode(\"dark\");\n      document.body.style.backgroundColor=\"#072057cd \";\n    }\n    else{\n      setmode(\"light\");\n      document.body.style.backgroundColor=\"white\";\n    }\n  }\n\n  return (\n   <>\n   {/* <Router> */}\n   <Navbar mode={mode} togglebtn={togglebtn}/>\n   <div className=\"container\">\n   {/* <Switch>\n          <Route exact path=\"/about\">\n            <About />\n          </Route>\n          <Route exact path=\"/\"> */}\n          <Textform title=\"Enter your text here\" mode={mode}/>\n          {/* </Route>\n        </Switch> */}\n   </div>\n   {/* </Router> */}\n   </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}